cmake_minimum_required(VERSION 3.16)

project("Java_Program" LANGUAGES Java)

find_package(Java 11 REQUIRED)
include(UseJava)

set(SRC_FILES
        "./src/Main.java"
        "./src/ReadFile.java")

set(JAR_FILES
        "./libs/jackson-annotations-2.18.3.jar"
        "./libs/jackson-core-2.18.3.jar"
        "./libs/jackson-databind-2.18.3.jar")

# NOTE (SAVIZ): The option 'INCLUDE_JARS' only makes sure that the jar file is added to the class path upon compilation step. The jar file is neither copied to the build directory nor is added to the jar file generated by 'add_jar()'.
add_jar("${PROJECT_NAME}"
        SOURCES ${SRC_FILES}
        INCLUDE_JARS ${JAR_FILES} 
        ENTRY_POINT Main
        OUTPUT_NAME "${PROJECT_NAME}")

# NOTE (SAVIZ): To make sure the jar files are found during runtime we copy them to the binary location and then use a 'MANIFEST.MF' file to point to them. 
add_custom_target(CopyJars ALL
        COMMAND ${CMAKE_COMMAND} -E copy_directory
        ${PROJECT_SOURCE_DIR}/libs
        ${PROJECT_BINARY_DIR}/libs
        COMMENT "Copying jars to binary location")

add_dependencies("${PROJECT_NAME}" CopyJars)

# This segment manages resources:
add_custom_target(CopyResources ALL
        COMMAND ${CMAKE_COMMAND} -E copy_directory
        ${PROJECT_SOURCE_DIR}/resources
        ${PROJECT_BINARY_DIR}/resources
        COMMENT "Copying resources to binary location")

add_dependencies("${PROJECT_NAME}" CopyResources)
